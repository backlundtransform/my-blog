<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My blog</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")

    <script>var app = angular.module("myapp", [])</script>
</head>
<body ng-app="myapp" ng-controller="MainController">

    <div id="top">
    </div>
    <div id="custom-bootstrap-menu" class="navbar navbar-default " role="navigation">
        <div class="container-fluid">
            <div class="navbar-header">

                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-menubuilder">
                    <span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span>
                </button>
            </div>
            <div class="collapse navbar-collapse navbar-menubuilder">
                <ul class="nav navbar-nav navbar-left">
                    <li>@Html.ActionLink("Blogs", "index", "Posts")</li>
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>

                    <li>
                        <form ng-submit="onFormSub(searchStr)" class="navbar-form" role="search">
                            <div class="input-group">
                                @Html.TextBox("search", null, new { @class = "form-control", @placeholder = "Search", ng_model = "searchStr" })
                                <div class="input-group-btn">
                                    <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                                </div>
                            </div>
                        </form>
                    </li>
                </ul>
              
                @Html.Partial("_LoginPartial")
               
            </div>
        </div>
    </div>

    <div class="row">

        <div class="col-md-1 col-sm-1">
        </div>
        <div class="col-md-7 col-sm-7">
            <div id="myid">

                <img src="~/Content/images/blog-coffee.jpg" class="img-thumbnail" /><br />
                @RenderBody()
            </div>
        </div>
        <div class="col-md-3 col-sm-3">
            @if (ViewContext.RouteData.Values["Controller"].ToString().ToLower().Equals("posts"))
            {
                <div class="widget">@Html.Partial("_TagWidget")</div><div class="widget">@Html.Partial("_Archive")</div><div class="widget">@Html.Partial("_Commentwidget")</div>
            }
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 col-sm-12 row footer">
        </div>
    </div>

    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <script>
        app.controller("MainController", function ($scope, $http) {
            $scope.child = {};
            $scope.myForm = ""

            $scope.reply = function (parentid) {

                $scope.myForm = parentid;

            }
            $scope.onResponse = function (data) {

                var element = document.getElementById('blogs');
                element.innerHTML = data.data;

                var injector = $('[ng-app]').injector();
                var $compile = injector.get('$compile');
                $compile(document.getElementById('blogs'))($scope);
            }

            $scope.onFormSub = function (searchStr) {

                var controller = "@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()";
                var view = "@HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString()";

                if (controller === "Posts" && view === "Index") {

                    $http.get("/Posts/GetPartialIndex/?search=" + searchStr).then($scope.onResponse);

                } else {

                    window.location.href = "/Posts/Index?search=" + searchStr;

                }

            };

            $scope.tagclick = function (searchStr) {

                var controller = "@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()";
                var view = "@HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString()";

                if (controller === "Posts" && view === "Index") {

                    $http.get("/Posts/GetPartialIndex/?tag=" + searchStr).then($scope.onResponse);

                } else {

                    window.location.href = "/Posts/Index?tag=" + searchStr;

                }
            };

            $scope.archiveclick = function (year, month) {

                var controller = "@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()";
                var view = "@HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString()";

                if (controller === "Posts" && view === "Index") {

                    $http.get("/Posts/GetPartialIndex/?year=" + year + "&month=" + month).then($scope.onResponse);

                } else {

                    window.location.href = "/Posts/Index?tag=" + year + "&month=" + month;

                }
            };
        });

        app.controller("Tagcontroller", function ($rootScope, $scope, $http) {

            $scope.string = "";
            $scope.myData = {};

            $scope.myData.goto = function (tag) {
                var serviceURL = '@Url.Action("index", "Posts")' + '?tag=' + tag;
                location.href = serviceURL;

            }

            $scope.color = ["success", "warning", "info"]
            $scope.random = function (index) {

                if (index % 3 === 0) {
                    return $scope.color[2];

                }
                else if (index % 2 === 0) {
                    return $scope.color[1];
                }
                else {
                    return $scope.color[0];
                }
            };

            $scope.myData.remove = function (tagid, postid) {

                var serviceURL = '@Url.Action("AngularTagRemove", "Posts")';

                var postData = { tagid: tagid, postid: postid };
                $http.post(serviceURL, postData).
                 success(function (data, status, headers, config) {

                     $scope.myData.fromServer = data.Result;
                     $rootScope.$broadcast('update');

                 }).
                 error(function (data, status, headers, config) {
                     alert(data.Result);
                 });
            }

            $scope.myData.OnInit = function (id) {

                var serviceURL = '@Url.Action("AngularTagInit", "Posts")';

                var postData = { id: id };
                $http.post(serviceURL, postData).
                 success(function (data, status, headers, config) {

                     $scope.myData.fromServer = data.Result;
                 }).
                 error(function (data, status, headers, config) {
                     alert(data.Result);
                 });
            }
            $scope.myData.add = function (id, string) {

                var serviceURL = '@Url.Action("AngularTag", "Posts")';

                var postData = { value: $scope.string, id: id };
                $http.post(serviceURL, postData).
                 success(function (data, status, headers, config) {

                     $scope.myData.fromServer = data.Result;
                     $rootScope.$broadcast('update');
                 }).
                error(function (data, status, headers, config) {
                    alert(data.Result);
                });
            }

        }

        );

        app.controller("Commentcontroller", function ($rootScope, $scope, $http) {
            $scope.$parent.child = $scope;
            $scope.string = "";
            $scope.myform = $("#myModal").attr("data-comment");
          
            $scope.myData = {};
            $scope.myData.delete = function (id) {

                var serviceURL = '@Url.Action("delete", "Comments")' + '/' + id;

                if (confirm("Do you really wanna delete this comment")) {

                    location.href = serviceURL;

                }
            }

            $scope.myData.edit = function (id) {

                $scope.string = $("#editor" + id).html();

                var serviceURL = '@Url.Action("edit", "Comments")' + '/' + id;

                var postData = { id: id, text: $scope.string };
                $http.post(serviceURL, postData).
                 success(function (data, status, headers, config) {

                     alert("Comment been updated");
                 }).
                 error(function (data, status, headers, config) {
                     alert("Something went wrong");
                 });

            }

            $scope.init = function (id) {

                $scope.cheater2 = false;
                $scope.cheater1 = false;
                $scope.myData.like(id, false);
                $scope.myData.dislike(id, false);
                
            }

            $scope.myData.like = function (id, like) {
                if ($scope.cheater2) {
                   alert("You already like this comment");
                    }
                else {
                var serviceURL = '@Url.Action("like", "Comments")';

                var postData = { id: id, like: like };
                $http.post(serviceURL, postData).
                 success(function (data, status, headers, config) {

                     $scope.like = data.Result;
                     if (like) {
                         $scope.cheater2 = true;
                     }
                 }).
                 error(function (data, status, headers, config) {
                     alert("Something went wrong");
                 });
                }
            }

            $scope.myData.dislike = function (id, dislike) {

                if ($scope.cheater1) {
                    alert("You already dislike this comment");
                }
                else {

                    var serviceURL = '@Url.Action("dislike", "Comments")';

                    var postData = { id: id, dislike: dislike };
                    $http.post(serviceURL, postData).
                     success(function (data, status, headers, config) {

                         $scope.dislike = data.Result;
                         if (dislike) {
                             $scope.cheater1 = true;
                         }

                     }).
                     error(function (data, status, headers, config) {
                         alert("Something went wrong");
                     });
                }
            }

        });

        app.controller("Tagwidgetcontroller", function ($scope, $http) {
            $scope.myData = {};

            $scope.string = "";

            $scope.color = ["success", "warning", "info"];
            $scope.random = function (index) {

                if (index % 3 === 0) {
                    return $scope.color[2];

                }
                else if (index % 2 === 0) {
                    return $scope.color[1];
                }
                else {
                    return $scope.color[0];
                }
            };

            $scope.$on('update', function (event, arg) {

                $scope.click();
            });

            $scope.click = function () {

                var serviceURL = '@Url.Action("TagWidget", "Posts")';

                var postData = {};
                $http.post(serviceURL, postData).
                 success(function (data, status, headers, config) {

                     $scope.myData.fromServer = data.Result;


                 }).
                 error(function (data, status, headers, config) {
                     alert(data);
                 });
            }



        }

           );

    </script>
</body>
</html>